{"ast":null,"code":"var _jsxFileName = \"/Users/chrisgallo/development/GitHub/memento/src/components/JotIdea.js\",\n    _s = $RefreshSig$();\n\nimport { Modal } from \"react-bootstrap\";\nimport { TextField, Button, Stack } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JotIdea(props, quotes, setQuotes) {\n  _s();\n\n  // const { register, handleSubmit, watch, formState: { errors } } = useForm();\n  const [quoteValue, setQuoteValue] = useState('');\n\n  const onTextChange = e => setQuoteValue(e.target.value);\n\n  const onSubmit = data => console.log(data); // setQuotes([...quotes, ])\n\n\n  const handleQuoteInputChange = event => {\n    event.persist();\n    setQuoteValue(event.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // setSubmitted(true);\n\n    debugger;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Jot an idea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          focused: true,\n          id: \"inputQuote\",\n          type: \"text\",\n          placeholder: \"na\",\n          name: \"quoteInput\",\n          value: quoteValue,\n          label: \"Quote\",\n          onChange: handleQuoteInputChange,\n          multiline: true,\n          rows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 1,\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: props.onHide,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: props.onHide,\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JotIdea, \"pi0PGuTvrUSBys6GPfxZBkc4QpE=\");\n\n_c = JotIdea;\n\nvar _c;\n\n$RefreshReg$(_c, \"JotIdea\");","map":{"version":3,"sources":["/Users/chrisgallo/development/GitHub/memento/src/components/JotIdea.js"],"names":["Modal","TextField","Button","Stack","useForm","useState","JotIdea","props","quotes","setQuotes","quoteValue","setQuoteValue","onTextChange","e","target","value","onSubmit","data","console","log","handleQuoteInputChange","event","persist","handleSubmit","preventDefault","onHide"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,iBAAtB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,KAA5B,QAAyC,eAAzC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,SAAhC,EAA2C;AAAA;;AACxD;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMO,YAAY,GAAIC,CAAD,IAAOF,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzC;;AACA,QAAMC,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAzB,CAJwD,CAKxD;;;AAEA,QAAMG,sBAAsB,GAAIC,KAAD,IAAW;AACxCA,IAAAA,KAAK,CAACC,OAAN;AACAX,IAAAA,aAAa,CAACU,KAAK,CAACP,MAAN,CAAaC,KAAd,CAAb;AACD,GAHD;;AAKA,QAAMQ,YAAY,GAAIV,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACW,cAAF,GAD0B,CAE1B;;AACA;AACD,GAJD;;AAMA,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,uBAAgB,+BAFlB;AAGE,IAAA,QAAQ,MAHV;AAAA,2BAKE;AAAM,MAAA,QAAQ,EAAED,YAAhB;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAa,UAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,OAAO,MAFT;AAGE,UAAA,EAAE,EAAC,YAHL;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,WAAW,EAAC,IALd;AAME,UAAA,IAAI,EAAC,YANP;AAOE,UAAA,KAAK,EAAEb,UAPT;AAQE,UAAA,KAAK,EAAC,OARR;AASE,UAAA,QAAQ,EAAEU,sBATZ;AAUE,UAAA,SAAS,MAVX;AAWE,UAAA,IAAI,EAAE;AAXR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eAqBE,QAAC,KAAD,CAAO,MAAP;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,CAAhB;AAAmB,UAAA,SAAS,EAAC,KAA7B;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,UAAhB;AAA2B,YAAA,OAAO,EAAEb,KAAK,CAACkB,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAElB,KAAK,CAACkB,MAA3C;AAAmD,YAAA,IAAI,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAtDuBnB,O;;KAAAA,O","sourcesContent":["import { Modal } from \"react-bootstrap\";\nimport { TextField, Button, Stack } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\n\nexport default function JotIdea(props, quotes, setQuotes) {\n  // const { register, handleSubmit, watch, formState: { errors } } = useForm();\n  const [quoteValue, setQuoteValue] = useState('')\n  const onTextChange = (e) => setQuoteValue(e.target.value);\n  const onSubmit = data => console.log(data);\n  // setQuotes([...quotes, ])\n\n  const handleQuoteInputChange = (event) => {\n    event.persist();\n    setQuoteValue(event.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // setSubmitted(true);\n    debugger\n  };\n\n  return (\n    <Modal\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Jot an idea\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TextField\n            fullWidth\n            focused\n            id=\"inputQuote\"\n            type=\"text\"\n            placeholder=\"na\"\n            name=\"quoteInput\"\n            value={quoteValue}\n            label=\"Quote\"\n            onChange={handleQuoteInputChange}\n            multiline\n            rows={4}\n            />\n        </Modal.Body>\n        <Modal.Footer>\n          <Stack spacing={1} direction=\"row\">\n            <Button variant=\"outlined\" onClick={props.onHide}>Cancel</Button>\n            <Button variant=\"contained\" onClick={props.onHide} type=\"submit\">Save</Button>\n          </Stack>\n        </Modal.Footer>\n      </form>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}